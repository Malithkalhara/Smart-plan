[{"/home/malith/Malith/projects/smart-plan/src/reportWebVitals.js":"1","/home/malith/Malith/projects/smart-plan/src/App.js":"2","/home/malith/Malith/projects/smart-plan/src/components/home.jsx":"3","/home/malith/Malith/projects/smart-plan/src/index.js":"4","/home/malith/Malith/projects/smart-plan/src/components/map.jsx":"5","/home/malith/Malith/projects/smart-plan/src/components/maker.jsx":"6","/home/malith/Malith/projects/smart-plan/src/components/form.jsx":"7"},{"size":362,"mtime":1606290480091,"results":"8","hashOfConfig":"9"},{"size":165,"mtime":1606312155176,"results":"10","hashOfConfig":"9"},{"size":21473,"mtime":1607260788126,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1606290480091,"results":"12","hashOfConfig":"9"},{"size":5364,"mtime":1607323765093,"results":"13","hashOfConfig":"9"},{"size":317,"mtime":1606317544298,"results":"14","hashOfConfig":"9"},{"size":129,"mtime":1606317653189,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n9pp1i",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/malith/Malith/projects/smart-plan/src/reportWebVitals.js",[],"/home/malith/Malith/projects/smart-plan/src/App.js",[],"/home/malith/Malith/projects/smart-plan/src/components/home.jsx",["31","32","33","34","35","36","37"],"import React,{useState} from 'react';\n\nimport axios from 'axios';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useForm } from 'react-hook-form';\nimport { Document, Page, Text, View, StyleSheet,PDFViewer } from '@react-pdf/renderer';\nimport MaterialTable from 'material-table'\nimport {Table,TableHeader,TableCell,TableBody,DataTableCell} from '@david.kucsai/react-pdf-table'\n\nimport Map from './map'\n\nconst Home = () => {\n\tconst [latitude,setLatitude]=useState();\n  const [longitude,setLongitude]=useState();\n  const [latt,setLat]=useState(7.488862);//7.488862\n  const [lngg,setLng]=useState(80.353441);//80.353441\n  const [features, setFeatures] = useState({\n    school: [],\n    hospital: [],\n    bank: [],\n    police:[],\n    supermarket:[]\n  });\n  const [open, setOpen] = useState(false);\n  const [openPdf, setOpenPdf] = useState(false);\n  const [data, setData] = useState();\n  const { register ,getValues} = useForm({\n    mode: 'onBlur',\n  });\n  const [facilities, setFacilities] = useState([]);\n  \n  const center = {\n    lat: parseFloat(latt),\n    lng: parseFloat(lngg)\n  };\n\n  const handleLatitude = (data) => {\n    setLatitude(data);\n  }\n\n  const handleLongitude = (data) => {\n    setLongitude(data);\n  }\n\n  const handleClick = () => {\n    setLat(latitude);\n    setLng(longitude);\n  }\n\n  const handleCheckbox = async (data,type) => {\n\n    if(data){\n      if(data){\n        const result = await axios.get(`https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${latitude},${longitude}&radius=1500&type=${type}&key=AIzaSyAcOnvMwmTrA9bFr7MiMwu9Now2tRUre9U`)\n        console.log(data,type);\n        console.log(result.data.results);\n\n        switch (type) {\n          case 'school':\n            setFeatures({...features,'school':result.data.results.slice(0,4)})\n            break;\n          case 'hospital':\n            setFeatures({...features,'hospital':result.data.results.slice(0,4)})\n            break;\n          case 'bank':\n            setFeatures({...features,'bank':result.data.results.slice(0,4)})\n            break;\n          case 'police':\n            setFeatures({...features,'police':result.data.results.slice(0,4)})\n            break;\n          case 'supermarket':\n            setFeatures({...features,'supermarket':result.data.results.slice(0,4)})\n            break;\n          default:\n            break;\n        }\n      }\n    }else{\n      switch (type) {\n        case 'school':\n          setFeatures({...features,'school':[]})\n          break;\n        case 'hospital':\n          setFeatures({...features,'hospital':[]})\n          break;\n        case 'bank':\n          setFeatures({...features,'bank':[]})\n          break;\n        case 'police':\n          setFeatures({...features,'police':[]})\n          break;\n        case 'supermarket':\n          setFeatures({...features,'supermarket':[]})\n          break;\n        default:\n          break;\n      }\n    }\n\n\n  }\n\n  const handleFacilities = (type) =>{\n    switch (type) {\n      case 'school':\n        setFeatures({...features,'school':[]})\n        break;\n      case 'hospital':\n        setFeatures({...features,'hospital':[]})\n        break;\n      case 'bank':\n        setFeatures({...features,'bank':[]})\n        break;\n      case 'police':\n        setFeatures({...features,'police':[]})\n        break;\n      case 'supermarket':\n        setFeatures({...features,'supermarket':[]})\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  const handleOpenPdf = () => {\n    setOpenPdf(true);\n    console.log('DATAAAAAAAAAAAAAAAAA',data);\n  };\n\n  const handleClosePdf = (value) => {\n    setOpenPdf(false);\n  };\n\n  const handleGenerate = (value) => {\n    const values = getValues();\n    setData(values);\n    console.log(values);\n    handleOpenPdf();\n  };\n\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstName', headerName: 'First name', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n    },\n  ];\n  \n  const rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  ];\n\n  const styles = StyleSheet.create({\n    page: { width:'1000px',height:'1000px' },\n    heading: { backgroundColor:'black',color: 'white', textAlign: 'center',fontWeight:'bold',padding:20,marginBottom:10},\n    text:{fontWeight:'bold'},\n    section: { borderStyle:'solid',borderWidth:3,borderColor:'black' ,textAlign: 'left',fontSize:14,padding:10,fontWeight:'bold',width:170,marginLeft:10},\n    test:{borderStyle:'solid',borderWidth:3,borderColor:'black'}\n  });\n\n  return (\n\t\t<Grid container>\n      <Grid item container >\n      \n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" >\n            BOOMI Value\n          </Typography>\n          \n        </Toolbar>\n      </AppBar>\n    \n      </Grid>\n      <Grid item>\n      <Typography variant=\"subtitle1\" gutterBottom style={{padding:\"50px 100px 5px 100px\"}}>\n        Enter Cordinates (WGX) :\n      </Typography>\n      </Grid>\n      <Grid item container style={{padding:\"0px 100px 0px 100px\"}} spacing={5}>\n            <Grid item>\n              <TextField onChange={(e)=>{handleLatitude(e.target.value);}} label=\"Latitude\" variant=\"outlined\" size=\"small\" />\n            </Grid>\n            <Grid item>\n              <TextField onChange={(e)=>{handleLongitude(e.target.value);}} label=\"Longitude\" variant=\"outlined\" size=\"small\" />\n            </Grid>\n            <Grid item>\n              <Button variant=\"contained\" onClick={handleClick} color=\"primary\">\n                Submit\n              </Button>\n            </Grid>\n            <Grid item style={{paddingLeft:'400px'}}>\n              <Button variant=\"contained\" color=\"secondary\" style={{height:'60px',}} onClick={handleClickOpen}>\n                Generate report\n              </Button>\n              \n            </Grid>\n            \n      </Grid>\n      <Typography variant=\"subtitle1\" gutterBottom style={{padding:\"0px 100px 0px 100px\"}}>\n        Select Features :\n      </Typography>\n      <Grid item container style={{padding:\"0px 100px 50px 100px\"}} spacing={5}>\n        <Grid item>\n          <FormControlLabel\n          control={\n            <Checkbox\n              // checked={state.checkedB}\n              onChange={(e)=>{handleCheckbox(e.target.checked,'school')}}\n              name=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Schools\"\n          />\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n          control={\n            <Checkbox\n              // checked={state.checkedB}\n              onChange={(e)=>{handleCheckbox(e.target.checked,'hospital')}}\n              name=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Hospitals\"\n          />\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n          control={\n            <Checkbox\n              // checked={state.checkedB}\n              onChange={(e)=>{handleCheckbox(e.target.checked,'bank')}}\n              name=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Banks\"\n          />\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n          control={\n            <Checkbox\n              // checked={state.checkedB}\n              onChange={(e)=>{handleCheckbox(e.target.checked,'police')}}\n              name=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Police stations\"\n          />\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n          control={\n            <Checkbox\n              // checked={state.checkedB}\n              onChange={(e)=>{handleCheckbox(e.target.checked,'supermarket')}}\n              name=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Super markets\"\n          />\n        </Grid>\n\n        </Grid>\n      <div style={{padding:\"0px 100px\"}}>\n        <Map center={center} features={features}/>\n      </div>\n      <Dialog\n        maxWidth='md'\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Basic Information</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n           <Grid container >\n              <Grid item style={{flex:1}} container spacing={3}>\n                <Grid item  style={{flex:1}}>\n                  <p style={{color:'black'}}>Village</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"village\"\n                      placeholder=\"Village\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>GND</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"gnd\"\n                      placeholder=\"GND\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid item container spacing={3}>\n                <Grid item style={{flex:1}} >\n                <p style={{color:'black'}}>DSD</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"dsd\"\n                      placeholder=\"DSD\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}> District</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"district\"\n                      placeholder=\"District\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid item container spacing={3}>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Province</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"province\"\n                      placeholder=\"Province\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Parcel ID</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"id\"\n                      placeholder=\"Parcel ID\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid item container spacing={3}>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Lot No</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"lot\"\n                      placeholder=\"Lot No\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Extent</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"extent\"\n                      placeholder=\"Extent\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid item container spacing={3}>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Name of the land</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"name\"\n                      placeholder=\"Name of the land\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Land use</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"land\"\n                      placeholder=\"Land use\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid item container spacing={3}>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Claimant</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"claimant\"\n                      placeholder=\"Claimant\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item style={{flex:1}}>\n                <p style={{color:'black'}}>Area (Acres/Roots/Perches)</p>\n                  <FormControl fullWidth>\n                    <TextField\n                      inputRef={register}\n                      name=\"area\"\n                      placeholder=\"Area\"\n                      variant=\"outlined\"\n                      size='small'\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid item container>\n              <Grid item container>\n              <p style={{color:'black'}}>Facilities</p>\n              </Grid>\n                <Grid item style={{flex:1}}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        // checked={state.checkedB}\n                        //onChange={(e)=>{handleCheckbox(e.target.checked,'bank')}}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Electricity\"\n                  />\n                </Grid>\n                <Grid item style={{flex:1}}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        // checked={state.checkedB}\n                        //onChange={(e)=>{handleCheckbox(e.target.checked,'bank')}}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Communication networks\"\n                  />\n                </Grid>\n                <Grid item style={{flex:1}}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        // checked={state.checkedB}\n                        //onChange={(e)=>{handleCheckbox(e.target.checked,'bank')}}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Trasportation facilities\"\n                  />\n                </Grid>\n                <Grid item style={{flex:1}}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        // checked={state.checkedB}\n                        //onChange={(e)=>{handleCheckbox(e.target.checked,'bank')}}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Sewage\"\n                  />\n                </Grid>\n                <Grid item style={{flex:1}}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        // checked={state.checkedB}\n                        //onChange={(e)=>{handleCheckbox(e.target.checked,'bank')}}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Water\"\n                  />\n                </Grid>\n              </Grid>\n           </Grid>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            cancel\n          </Button>\n          <Button onClick={handleGenerate} color=\"primary\" autoFocus>\n            Generate\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n{data ?      <Dialog\n      fullScreen\n        open={openPdf}\n        onClose={handleClosePdf}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <PDFViewer height='950px'>\n          <Document>\n            <Page size=\"A4\" style={styles.page}>\n              <View style={styles.heading}>\n                <Text style={styles.text}>Final Report</Text>\n              </View>\n              <View style={styles.section}>\n                  <Text>Latitude : {latitude}</Text>\n                  <Text>Longitude: {longitude}</Text>\n              </View>\n              <Table\n                    data={[\n                        {firstName: \"Village\", lastName: `${data.village}`},\n                        {firstName: \"GND\", lastName: `${data.gnd}`},\n                        {firstName: \"DSD\", lastName: `${data.dsd}`},\n                        {firstName: \"District\", lastName: `${data.district}`},\n                        {firstName: \"Province\", lastName: `${data.province}`},\n                        {firstName: \"Parcel ID\", lastName: `${data.id}`},\n                        {firstName: \"Lot No\", lastName: `${data.lot}`},\n                        {firstName: \"Extent\", lastName: `${data.extent}`},\n                        {firstName: \"Name of the land\", lastName: `${data.name}`},\n                        {firstName: \"Land use\", lastName: `${data.land}`},\n                        {firstName: \"Claimant\", lastName: `${data.claimant}`},\n                        {firstName: \"Area\", lastName: `${data.area}`},\n                    ]}\n                >\n                    <TableHeader>\n                        <TableCell>\n                            Name\n                        </TableCell>\n                        <TableCell>\n                            Value\n                        </TableCell>\n                    </TableHeader>\n                    <TableBody>\n                        <DataTableCell getContent={(r) => r.firstName}/>\n                        <DataTableCell getContent={(r) => r.lastName}/>\n                    </TableBody>\n                </Table>\n            </Page>\n          </Document>\n        </PDFViewer>\n      </Dialog> : null}\n\n        \n\t\t</Grid>\n  );\n};\n\nexport default Home;\n","/home/malith/Malith/projects/smart-plan/src/index.js",[],"/home/malith/Malith/projects/smart-plan/src/components/map.jsx",["38","39","40","41","42","43","44","45"],"/home/malith/Malith/projects/smart-plan/src/components/maker.jsx",[],"/home/malith/Malith/projects/smart-plan/src/components/form.jsx",[],{"ruleId":"46","severity":1,"message":"47","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":17},{"ruleId":"46","severity":1,"message":"50","line":24,"column":8,"nodeType":"48","messageId":"49","endLine":24,"endColumn":21},{"ruleId":"46","severity":1,"message":"51","line":47,"column":10,"nodeType":"48","messageId":"49","endLine":47,"endColumn":20},{"ruleId":"46","severity":1,"message":"52","line":47,"column":22,"nodeType":"48","messageId":"49","endLine":47,"endColumn":35},{"ruleId":"46","severity":1,"message":"53","line":120,"column":9,"nodeType":"48","messageId":"49","endLine":120,"endColumn":25},{"ruleId":"46","severity":1,"message":"54","line":166,"column":9,"nodeType":"48","messageId":"49","endLine":166,"endColumn":16},{"ruleId":"46","severity":1,"message":"55","line":187,"column":9,"nodeType":"48","messageId":"49","endLine":187,"endColumn":13},{"ruleId":"46","severity":1,"message":"56","line":1,"column":24,"nodeType":"48","messageId":"49","endLine":1,"endColumn":35},{"ruleId":"46","severity":1,"message":"57","line":7,"column":10,"nodeType":"48","messageId":"49","endLine":7,"endColumn":17},{"ruleId":"46","severity":1,"message":"58","line":8,"column":10,"nodeType":"48","messageId":"49","endLine":8,"endColumn":31},{"ruleId":"46","severity":1,"message":"59","line":29,"column":10,"nodeType":"48","messageId":"49","endLine":29,"endColumn":18},{"ruleId":"46","severity":1,"message":"60","line":29,"column":20,"nodeType":"48","messageId":"49","endLine":29,"endColumn":31},{"ruleId":"46","severity":1,"message":"61","line":30,"column":10,"nodeType":"48","messageId":"49","endLine":30,"endColumn":15},{"ruleId":"46","severity":1,"message":"62","line":30,"column":17,"nodeType":"48","messageId":"49","endLine":30,"endColumn":25},{"ruleId":"46","severity":1,"message":"63","line":42,"column":9,"nodeType":"48","messageId":"49","endLine":42,"endColumn":17},"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'MaterialTable' is defined but never used.","'facilities' is assigned a value but never used.","'setFacilities' is assigned a value but never used.","'handleFacilities' is assigned a value but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'useCallback' is defined but never used.","'InfoBox' is defined but never used.","'DistanceMatrixService' is defined but never used.","'distance' is assigned a value but never used.","'setDistance' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'position' is assigned a value but never used."]